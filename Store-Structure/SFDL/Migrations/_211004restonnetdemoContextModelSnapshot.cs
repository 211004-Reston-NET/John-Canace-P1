// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFDL;

namespace SFDL.Migrations
{
    [DbContext(typeof(_211004restonnetdemoContext))]
    partial class _211004restonnetdemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SFModels.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cus_customerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("customer_address");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("customer_email");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("customer_name");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("customer_phone");

                    b.HasKey("CustomerID")
                        .HasName("cus_PK");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SFModels.Line_Item", b =>
                {
                    b.Property<int>("lineItemProductNameID")
                        .HasColumnType("int")
                        .HasColumnName("line_itemnameID");

                    b.Property<int>("LineOrderListID")
                        .HasColumnType("int")
                        .HasColumnName("line_orderListID");

                    b.Property<int>("LineStoreID")
                        .HasColumnType("int")
                        .HasColumnName("line_storeID");

                    b.Property<int?>("OrderList")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("line_itemquantity");

                    b.Property<string>("lineItemList")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lineItemProductNameID")
                        .HasName("lin_PK");

                    b.HasIndex("LineOrderListID");

                    b.HasIndex("LineStoreID");

                    b.HasIndex("OrderList");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("SFModels.Order", b =>
                {
                    b.Property<int>("OrderList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_orderListID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("StoreID")
                        .HasColumnType("int")
                        .HasColumnName("order_storeID");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("order_totalprice")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("OrderList")
                        .HasName("ord_PK");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StoreID");

                    b.ToTable("OrderList");
                });

            modelBuilder.Entity("SFModels.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_productnameID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("product_category");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("product_description");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("ProductPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("product_price")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<int>("StoreStoreID")
                        .HasColumnType("int")
                        .HasColumnName("store_storeID");

                    b.HasKey("ProductID")
                        .HasName("pro_PK");

                    b.HasIndex("StoreStoreID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SFModels.StoreFront", b =>
                {
                    b.Property<int>("StoreFrontID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("store_storeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductsList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreFrontAddress")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("store_address");

                    b.Property<string>("StoreFrontName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("store_name");

                    b.HasKey("StoreFrontID")
                        .HasName("sto_PK");

                    b.HasIndex(new[] { "StoreFrontAddress" }, "sto_UC_address")
                        .IsUnique();

                    b.HasIndex(new[] { "StoreFrontName" }, "sto_UC_name")
                        .IsUnique();

                    b.ToTable("StoreFront");
                });

            modelBuilder.Entity("SFModels.Line_Item", b =>
                {
                    b.HasOne("SFModels.Order", "LineOrderList")
                        .WithMany("LineItems")
                        .HasForeignKey("LineOrderListID")
                        .HasConstraintName("lin_ord_FK")
                        .IsRequired();

                    b.HasOne("SFModels.StoreFront", "LineStore")
                        .WithMany("Line_Items")
                        .HasForeignKey("LineStoreID")
                        .HasConstraintName("lin_sto_FK")
                        .IsRequired();

                    b.HasOne("SFModels.Order", null)
                        .WithMany("ItemList")
                        .HasForeignKey("OrderList");

                    b.HasOne("SFModels.Product", "Product")
                        .WithOne("LineItem")
                        .HasForeignKey("SFModels.Line_Item", "lineItemProductNameID")
                        .HasConstraintName("lin_pro_FK")
                        .IsRequired();

                    b.Navigation("LineOrderList");

                    b.Navigation("LineStore");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SFModels.Order", b =>
                {
                    b.HasOne("SFModels.Customer", "OrderCus")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .HasConstraintName("ord_cus_FK")
                        .IsRequired();

                    b.HasOne("SFModels.StoreFront", "OrderStore")
                        .WithMany("Orders")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("ord_sto_FK")
                        .IsRequired();

                    b.Navigation("OrderCus");

                    b.Navigation("OrderStore");
                });

            modelBuilder.Entity("SFModels.Product", b =>
                {
                    b.HasOne("SFModels.StoreFront", "StoreStore")
                        .WithMany("Products")
                        .HasForeignKey("StoreStoreID")
                        .HasConstraintName("pro_sto_FK")
                        .IsRequired();

                    b.Navigation("StoreStore");
                });

            modelBuilder.Entity("SFModels.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SFModels.Order", b =>
                {
                    b.Navigation("ItemList");

                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("SFModels.Product", b =>
                {
                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("SFModels.StoreFront", b =>
                {
                    b.Navigation("Line_Items");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
